/// The `extractor` interface provides a set of functions to interact with the series-based media platform.
/// It allows users to search for series, retrieve episodes and fetch video streams for episodes.
///
/// This interface is specifically designed for fetching data over the network and does not support
/// local or file system data extraction.
interface extractor {
    use types.{
        filter-category, search-filter, series-page, series, episodes-page, video,
    };
    use wasi:http/types@0.2.3.{error-code};
    
    /// Returns a list of available filters to use in the `search` method.
    filters: func() -> result<list<filter-category>, error-code>;

    /// Searches for series based on a query string, optional pagination, and a list of filters.
    ///
    /// * `query`: The search query string, used to find matching series.
    /// * `page`: Optional page number for paginated results.
    /// * `filters`: List of filters to apply to the search.
    ///
    /// Returns a `series-page` if successful, or an http error code as a `error-code`.
    search: func(
        query: string,
        page: option<u16>,
        filters: list<search-filter>
    ) -> result<series-page, error-code>;

    /// Retrieves information about a specific series, identified by its unique `series-id`.
    ///
    /// * `series-id`: The unique identifier for the series to retrieve information about.
    ///
    /// Returns a `series` record if successful, or an http error code as a `error-code`.
    get-series-info: func(series-id: string) -> result<series, error-code>;

    /// Retrieves a paginated list of episodes for a given series, identified by its unique `series-id`.
    ///
    /// * `series-id`: The unique identifier for the series from which episodes are to be fetched.
    /// * `page`: Optional page number for paginated results.
    ///
    /// Returns an `episodes-page` if successful, or an http error code as a `error-code`.
    get-series-episodes: func(
        series-id: string, 
        page: option<u16>
    ) -> result<episodes-page, error-code>;

    /// Retrieves the available video streams for a given episode of a specific series.
    ///
    /// * `series-id`: The unique identifier for the series to which the episode belongs.
    /// * `episode-id`: The unique identifier of the episode for which video streams are requested.
    ///
    /// Returns a list of `video` records if successful, or an http error code as a `error-code`.
    get-series-videos: func(
        series-id: string,
        episode-id: string
    ) -> result<list<video>, error-code>;
}
